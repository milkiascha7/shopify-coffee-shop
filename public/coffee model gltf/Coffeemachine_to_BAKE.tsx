/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 coffeemachine_to_BAKE.gltf --types --keepnames --keepgroups --shadows 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Cylinder001: THREE.Mesh;
    Cylinder001_1: THREE.Mesh;
    Cylinder005: THREE.Mesh;
    Cylinder005_1: THREE.Mesh;
    main_body_black_All_Baked: THREE.Mesh;
  };
  materials: {
    ['Body upper.001']: THREE.MeshStandardMaterial;
    plastic: THREE.MeshPhysicalMaterial;
    ['plastic.002']: THREE.MeshPhysicalMaterial;
    ['BAKED BLACK']: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[];
};

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>;

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/coffeemachine_to_BAKE.gltf') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <group name="back_water_holder" position={[0.064, 2.73, 0.526]} rotation={[0, 1.567, 0]}>
          <mesh
            name="Cylinder001"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder001.geometry}
            material={materials['Body upper.001']}
          />
          <mesh
            name="Cylinder001_1"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder001_1.geometry}
            material={materials.plastic}
          />
        </group>
        <group name="knob" position={[0.064, 2.73, 0.526]} rotation={[0, 1.567, 0]}>
          <mesh
            name="Cylinder005"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder005.geometry}
            material={materials.plastic}
          />
          <mesh
            name="Cylinder005_1"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder005_1.geometry}
            material={materials['plastic.002']}
          />
        </group>
        <mesh
          name="main_body_black_All_Baked"
          castShadow
          receiveShadow
          geometry={nodes.main_body_black_All_Baked.geometry}
          material={materials['BAKED BLACK']}
          position={[0.064, 2.73, 0.526]}
          rotation={[0, 1.567, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/coffeemachine_to_BAKE.gltf');
